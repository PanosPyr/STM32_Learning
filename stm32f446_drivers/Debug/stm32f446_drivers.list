
stm32f446_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000a10  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000bd4  08000bd4  00010bd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000be0  08000be0  00010be8  2**0
                  CONTENTS
  4 .ARM          00000000  08000be0  08000be0  00010be8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000be0  08000be8  00010be8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000be0  08000be0  00010be0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000be4  08000be4  00010be4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010be8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000be8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000be8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010be8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010c12  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001179  00000000  00000000  00010c55  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000004cf  00000000  00000000  00011dce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000138  00000000  00000000  000122a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000dd  00000000  00000000  000123d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001983e  00000000  00000000  000124b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001bfc  00000000  00000000  0002bcf3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008e7a2  00000000  00000000  0002d8ef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000430  00000000  00000000  000bc094  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  000bc4c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000bbc 	.word	0x08000bbc

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000bbc 	.word	0x08000bbc

08000204 <strlen>:
 8000204:	4603      	mov	r3, r0
 8000206:	f813 2b01 	ldrb.w	r2, [r3], #1
 800020a:	2a00      	cmp	r2, #0
 800020c:	d1fb      	bne.n	8000206 <strlen+0x2>
 800020e:	1a18      	subs	r0, r3, r0
 8000210:	3801      	subs	r0, #1
 8000212:	4770      	bx	lr

08000214 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_TypeDef *pGPIOx, uint8_t En)
{
 8000214:	b480      	push	{r7}
 8000216:	b083      	sub	sp, #12
 8000218:	af00      	add	r7, sp, #0
 800021a:	6078      	str	r0, [r7, #4]
 800021c:	460b      	mov	r3, r1
 800021e:	70fb      	strb	r3, [r7, #3]
	if(En)
 8000220:	78fb      	ldrb	r3, [r7, #3]
 8000222:	2b00      	cmp	r3, #0
 8000224:	d058      	beq.n	80002d8 <GPIO_PeriClockControl+0xc4>
	{
		if(pGPIOx == GPIOA) RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a71      	ldr	r2, [pc, #452]	; (80003f0 <GPIO_PeriClockControl+0x1dc>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriClockControl+0x28>
 800022e:	4b71      	ldr	r3, [pc, #452]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a70      	ldr	r2, [pc, #448]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000234:	f043 0301 	orr.w	r3, r3, #1
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
			RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOHRST;
			RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOHRST;
		}
	}

}
 800023a:	e0d4      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOB) RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a6e      	ldr	r2, [pc, #440]	; (80003f8 <GPIO_PeriClockControl+0x1e4>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriClockControl+0x3e>
 8000244:	4b6b      	ldr	r3, [pc, #428]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a6a      	ldr	r2, [pc, #424]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800024a:	f043 0302 	orr.w	r3, r3, #2
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e0c9      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOC) RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a69      	ldr	r2, [pc, #420]	; (80003fc <GPIO_PeriClockControl+0x1e8>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriClockControl+0x54>
 800025a:	4b66      	ldr	r3, [pc, #408]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a65      	ldr	r2, [pc, #404]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000260:	f043 0304 	orr.w	r3, r3, #4
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e0be      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOD) RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a65      	ldr	r2, [pc, #404]	; (8000400 <GPIO_PeriClockControl+0x1ec>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriClockControl+0x6a>
 8000270:	4b60      	ldr	r3, [pc, #384]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a5f      	ldr	r2, [pc, #380]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000276:	f043 0308 	orr.w	r3, r3, #8
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e0b3      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOE) RCC->AHB1ENR |= RCC_AHB1ENR_GPIOEEN;
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a60      	ldr	r2, [pc, #384]	; (8000404 <GPIO_PeriClockControl+0x1f0>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PeriClockControl+0x80>
 8000286:	4b5b      	ldr	r3, [pc, #364]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a5a      	ldr	r2, [pc, #360]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800028c:	f043 0310 	orr.w	r3, r3, #16
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e0a8      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOF) RCC->AHB1ENR |= RCC_AHB1ENR_GPIOFEN;
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a5c      	ldr	r2, [pc, #368]	; (8000408 <GPIO_PeriClockControl+0x1f4>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PeriClockControl+0x96>
 800029c:	4b55      	ldr	r3, [pc, #340]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a54      	ldr	r2, [pc, #336]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80002a2:	f043 0320 	orr.w	r3, r3, #32
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e09d      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOG) RCC->AHB1ENR |= RCC_AHB1ENR_GPIOGEN;
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a57      	ldr	r2, [pc, #348]	; (800040c <GPIO_PeriClockControl+0x1f8>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d106      	bne.n	80002c0 <GPIO_PeriClockControl+0xac>
 80002b2:	4b50      	ldr	r3, [pc, #320]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a4f      	ldr	r2, [pc, #316]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80002b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	e092      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOH) RCC->AHB1ENR |= RCC_AHB1ENR_GPIOHEN;
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a53      	ldr	r2, [pc, #332]	; (8000410 <GPIO_PeriClockControl+0x1fc>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	f040 808e 	bne.w	80003e6 <GPIO_PeriClockControl+0x1d2>
 80002ca:	4b4a      	ldr	r3, [pc, #296]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80002cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ce:	4a49      	ldr	r2, [pc, #292]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80002d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d6:	e086      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		if(pGPIOx == GPIOA)
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a45      	ldr	r2, [pc, #276]	; (80003f0 <GPIO_PeriClockControl+0x1dc>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d10c      	bne.n	80002fa <GPIO_PeriClockControl+0xe6>
			RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOARST;
 80002e0:	4b44      	ldr	r3, [pc, #272]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80002e2:	691b      	ldr	r3, [r3, #16]
 80002e4:	4a43      	ldr	r2, [pc, #268]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80002e6:	f043 0301 	orr.w	r3, r3, #1
 80002ea:	6113      	str	r3, [r2, #16]
			RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOARST;
 80002ec:	4b41      	ldr	r3, [pc, #260]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80002ee:	691b      	ldr	r3, [r3, #16]
 80002f0:	4a40      	ldr	r2, [pc, #256]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80002f2:	f023 0301 	bic.w	r3, r3, #1
 80002f6:	6113      	str	r3, [r2, #16]
}
 80002f8:	e075      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOB)
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	4a3e      	ldr	r2, [pc, #248]	; (80003f8 <GPIO_PeriClockControl+0x1e4>)
 80002fe:	4293      	cmp	r3, r2
 8000300:	d10c      	bne.n	800031c <GPIO_PeriClockControl+0x108>
			RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOBRST;
 8000302:	4b3c      	ldr	r3, [pc, #240]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000304:	691b      	ldr	r3, [r3, #16]
 8000306:	4a3b      	ldr	r2, [pc, #236]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000308:	f043 0302 	orr.w	r3, r3, #2
 800030c:	6113      	str	r3, [r2, #16]
			RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOBRST;
 800030e:	4b39      	ldr	r3, [pc, #228]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000310:	691b      	ldr	r3, [r3, #16]
 8000312:	4a38      	ldr	r2, [pc, #224]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000314:	f023 0302 	bic.w	r3, r3, #2
 8000318:	6113      	str	r3, [r2, #16]
}
 800031a:	e064      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOC)
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a37      	ldr	r2, [pc, #220]	; (80003fc <GPIO_PeriClockControl+0x1e8>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d10c      	bne.n	800033e <GPIO_PeriClockControl+0x12a>
			RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOCRST;
 8000324:	4b33      	ldr	r3, [pc, #204]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000326:	691b      	ldr	r3, [r3, #16]
 8000328:	4a32      	ldr	r2, [pc, #200]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800032a:	f043 0304 	orr.w	r3, r3, #4
 800032e:	6113      	str	r3, [r2, #16]
			RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOCRST;
 8000330:	4b30      	ldr	r3, [pc, #192]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000332:	691b      	ldr	r3, [r3, #16]
 8000334:	4a2f      	ldr	r2, [pc, #188]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000336:	f023 0304 	bic.w	r3, r3, #4
 800033a:	6113      	str	r3, [r2, #16]
}
 800033c:	e053      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOD)
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a2f      	ldr	r2, [pc, #188]	; (8000400 <GPIO_PeriClockControl+0x1ec>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d10c      	bne.n	8000360 <GPIO_PeriClockControl+0x14c>
			RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIODRST;
 8000346:	4b2b      	ldr	r3, [pc, #172]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000348:	691b      	ldr	r3, [r3, #16]
 800034a:	4a2a      	ldr	r2, [pc, #168]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800034c:	f043 0308 	orr.w	r3, r3, #8
 8000350:	6113      	str	r3, [r2, #16]
			RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIODRST;
 8000352:	4b28      	ldr	r3, [pc, #160]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000354:	691b      	ldr	r3, [r3, #16]
 8000356:	4a27      	ldr	r2, [pc, #156]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000358:	f023 0308 	bic.w	r3, r3, #8
 800035c:	6113      	str	r3, [r2, #16]
}
 800035e:	e042      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOE)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a28      	ldr	r2, [pc, #160]	; (8000404 <GPIO_PeriClockControl+0x1f0>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d10c      	bne.n	8000382 <GPIO_PeriClockControl+0x16e>
			RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOERST;
 8000368:	4b22      	ldr	r3, [pc, #136]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800036a:	691b      	ldr	r3, [r3, #16]
 800036c:	4a21      	ldr	r2, [pc, #132]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800036e:	f043 0310 	orr.w	r3, r3, #16
 8000372:	6113      	str	r3, [r2, #16]
			RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOERST;
 8000374:	4b1f      	ldr	r3, [pc, #124]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000376:	691b      	ldr	r3, [r3, #16]
 8000378:	4a1e      	ldr	r2, [pc, #120]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800037a:	f023 0310 	bic.w	r3, r3, #16
 800037e:	6113      	str	r3, [r2, #16]
}
 8000380:	e031      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOF)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a20      	ldr	r2, [pc, #128]	; (8000408 <GPIO_PeriClockControl+0x1f4>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d10c      	bne.n	80003a4 <GPIO_PeriClockControl+0x190>
			RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOFRST;
 800038a:	4b1a      	ldr	r3, [pc, #104]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800038c:	691b      	ldr	r3, [r3, #16]
 800038e:	4a19      	ldr	r2, [pc, #100]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000390:	f043 0320 	orr.w	r3, r3, #32
 8000394:	6113      	str	r3, [r2, #16]
			RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOFRST;
 8000396:	4b17      	ldr	r3, [pc, #92]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 8000398:	691b      	ldr	r3, [r3, #16]
 800039a:	4a16      	ldr	r2, [pc, #88]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 800039c:	f023 0320 	bic.w	r3, r3, #32
 80003a0:	6113      	str	r3, [r2, #16]
}
 80003a2:	e020      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOG)
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	4a19      	ldr	r2, [pc, #100]	; (800040c <GPIO_PeriClockControl+0x1f8>)
 80003a8:	4293      	cmp	r3, r2
 80003aa:	d10c      	bne.n	80003c6 <GPIO_PeriClockControl+0x1b2>
			RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOGRST;
 80003ac:	4b11      	ldr	r3, [pc, #68]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80003ae:	691b      	ldr	r3, [r3, #16]
 80003b0:	4a10      	ldr	r2, [pc, #64]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80003b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003b6:	6113      	str	r3, [r2, #16]
			RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOGRST;
 80003b8:	4b0e      	ldr	r3, [pc, #56]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80003ba:	691b      	ldr	r3, [r3, #16]
 80003bc:	4a0d      	ldr	r2, [pc, #52]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80003be:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80003c2:	6113      	str	r3, [r2, #16]
}
 80003c4:	e00f      	b.n	80003e6 <GPIO_PeriClockControl+0x1d2>
		else if(pGPIOx == GPIOH)
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	4a11      	ldr	r2, [pc, #68]	; (8000410 <GPIO_PeriClockControl+0x1fc>)
 80003ca:	4293      	cmp	r3, r2
 80003cc:	d10b      	bne.n	80003e6 <GPIO_PeriClockControl+0x1d2>
			RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOHRST;
 80003ce:	4b09      	ldr	r3, [pc, #36]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80003d0:	691b      	ldr	r3, [r3, #16]
 80003d2:	4a08      	ldr	r2, [pc, #32]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80003d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003d8:	6113      	str	r3, [r2, #16]
			RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOHRST;
 80003da:	4b06      	ldr	r3, [pc, #24]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80003dc:	691b      	ldr	r3, [r3, #16]
 80003de:	4a05      	ldr	r2, [pc, #20]	; (80003f4 <GPIO_PeriClockControl+0x1e0>)
 80003e0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003e4:	6113      	str	r3, [r2, #16]
}
 80003e6:	bf00      	nop
 80003e8:	370c      	adds	r7, #12
 80003ea:	46bd      	mov	sp, r7
 80003ec:	bc80      	pop	{r7}
 80003ee:	4770      	bx	lr
 80003f0:	40020000 	.word	0x40020000
 80003f4:	40023800 	.word	0x40023800
 80003f8:	40020400 	.word	0x40020400
 80003fc:	40020800 	.word	0x40020800
 8000400:	40020c00 	.word	0x40020c00
 8000404:	40021000 	.word	0x40021000
 8000408:	40021400 	.word	0x40021400
 800040c:	40021800 	.word	0x40021800
 8000410:	40021c00 	.word	0x40021c00

08000414 <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000414:	b580      	push	{r7, lr}
 8000416:	b086      	sub	sp, #24
 8000418:	af00      	add	r7, sp, #0
 800041a:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 800041c:	2300      	movs	r3, #0
 800041e:	617b      	str	r3, [r7, #20]

	//Enable peripheral clock
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, 1);
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	2101      	movs	r1, #1
 8000426:	4618      	mov	r0, r3
 8000428:	f7ff fef4 	bl	8000214 <GPIO_PeriClockControl>

	//COnfigure the mode of gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	795b      	ldrb	r3, [r3, #5]
 8000430:	2b03      	cmp	r3, #3
 8000432:	d820      	bhi.n	8000476 <GPIO_Init+0x62>
	{
		//non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	795b      	ldrb	r3, [r3, #5]
 8000438:	461a      	mov	r2, r3
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	791b      	ldrb	r3, [r3, #4]
 800043e:	005b      	lsls	r3, r3, #1
 8000440:	fa02 f303 	lsl.w	r3, r2, r3
 8000444:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	681a      	ldr	r2, [r3, #0]
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	791b      	ldrb	r3, [r3, #4]
 8000450:	005b      	lsls	r3, r3, #1
 8000452:	2103      	movs	r1, #3
 8000454:	fa01 f303 	lsl.w	r3, r1, r3
 8000458:	43db      	mvns	r3, r3
 800045a:	4619      	mov	r1, r3
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	400a      	ands	r2, r1
 8000462:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	6819      	ldr	r1, [r3, #0]
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	697a      	ldr	r2, [r7, #20]
 8000470:	430a      	orrs	r2, r1
 8000472:	601a      	str	r2, [r3, #0]
 8000474:	e0c8      	b.n	8000608 <GPIO_Init+0x1f4>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	795b      	ldrb	r3, [r3, #5]
 800047a:	2b04      	cmp	r3, #4
 800047c:	d117      	bne.n	80004ae <GPIO_Init+0x9a>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Set falling edge
 800047e:	4b47      	ldr	r3, [pc, #284]	; (800059c <GPIO_Init+0x188>)
 8000480:	68db      	ldr	r3, [r3, #12]
 8000482:	687a      	ldr	r2, [r7, #4]
 8000484:	7912      	ldrb	r2, [r2, #4]
 8000486:	4611      	mov	r1, r2
 8000488:	2201      	movs	r2, #1
 800048a:	408a      	lsls	r2, r1
 800048c:	4611      	mov	r1, r2
 800048e:	4a43      	ldr	r2, [pc, #268]	; (800059c <GPIO_Init+0x188>)
 8000490:	430b      	orrs	r3, r1
 8000492:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clear rising edge
 8000494:	4b41      	ldr	r3, [pc, #260]	; (800059c <GPIO_Init+0x188>)
 8000496:	689b      	ldr	r3, [r3, #8]
 8000498:	687a      	ldr	r2, [r7, #4]
 800049a:	7912      	ldrb	r2, [r2, #4]
 800049c:	4611      	mov	r1, r2
 800049e:	2201      	movs	r2, #1
 80004a0:	408a      	lsls	r2, r1
 80004a2:	43d2      	mvns	r2, r2
 80004a4:	4611      	mov	r1, r2
 80004a6:	4a3d      	ldr	r2, [pc, #244]	; (800059c <GPIO_Init+0x188>)
 80004a8:	400b      	ands	r3, r1
 80004aa:	6093      	str	r3, [r2, #8]
 80004ac:	e035      	b.n	800051a <GPIO_Init+0x106>
		}

		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	795b      	ldrb	r3, [r3, #5]
 80004b2:	2b05      	cmp	r3, #5
 80004b4:	d117      	bne.n	80004e6 <GPIO_Init+0xd2>
		{
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b6:	4b39      	ldr	r3, [pc, #228]	; (800059c <GPIO_Init+0x188>)
 80004b8:	689b      	ldr	r3, [r3, #8]
 80004ba:	687a      	ldr	r2, [r7, #4]
 80004bc:	7912      	ldrb	r2, [r2, #4]
 80004be:	4611      	mov	r1, r2
 80004c0:	2201      	movs	r2, #1
 80004c2:	408a      	lsls	r2, r1
 80004c4:	4611      	mov	r1, r2
 80004c6:	4a35      	ldr	r2, [pc, #212]	; (800059c <GPIO_Init+0x188>)
 80004c8:	430b      	orrs	r3, r1
 80004ca:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004cc:	4b33      	ldr	r3, [pc, #204]	; (800059c <GPIO_Init+0x188>)
 80004ce:	68db      	ldr	r3, [r3, #12]
 80004d0:	687a      	ldr	r2, [r7, #4]
 80004d2:	7912      	ldrb	r2, [r2, #4]
 80004d4:	4611      	mov	r1, r2
 80004d6:	2201      	movs	r2, #1
 80004d8:	408a      	lsls	r2, r1
 80004da:	43d2      	mvns	r2, r2
 80004dc:	4611      	mov	r1, r2
 80004de:	4a2f      	ldr	r2, [pc, #188]	; (800059c <GPIO_Init+0x188>)
 80004e0:	400b      	ands	r3, r1
 80004e2:	60d3      	str	r3, [r2, #12]
 80004e4:	e019      	b.n	800051a <GPIO_Init+0x106>
		}

		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FRT)
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	795b      	ldrb	r3, [r3, #5]
 80004ea:	2b06      	cmp	r3, #6
 80004ec:	d115      	bne.n	800051a <GPIO_Init+0x106>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ee:	4b2b      	ldr	r3, [pc, #172]	; (800059c <GPIO_Init+0x188>)
 80004f0:	68db      	ldr	r3, [r3, #12]
 80004f2:	687a      	ldr	r2, [r7, #4]
 80004f4:	7912      	ldrb	r2, [r2, #4]
 80004f6:	4611      	mov	r1, r2
 80004f8:	2201      	movs	r2, #1
 80004fa:	408a      	lsls	r2, r1
 80004fc:	4611      	mov	r1, r2
 80004fe:	4a27      	ldr	r2, [pc, #156]	; (800059c <GPIO_Init+0x188>)
 8000500:	430b      	orrs	r3, r1
 8000502:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000504:	4b25      	ldr	r3, [pc, #148]	; (800059c <GPIO_Init+0x188>)
 8000506:	689b      	ldr	r3, [r3, #8]
 8000508:	687a      	ldr	r2, [r7, #4]
 800050a:	7912      	ldrb	r2, [r2, #4]
 800050c:	4611      	mov	r1, r2
 800050e:	2201      	movs	r2, #1
 8000510:	408a      	lsls	r2, r1
 8000512:	4611      	mov	r1, r2
 8000514:	4a21      	ldr	r2, [pc, #132]	; (800059c <GPIO_Init+0x188>)
 8000516:	430b      	orrs	r3, r1
 8000518:	6093      	str	r3, [r2, #8]
		}

		//Configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	791b      	ldrb	r3, [r3, #4]
 800051e:	089b      	lsrs	r3, r3, #2
 8000520:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	791b      	ldrb	r3, [r3, #4]
 8000526:	f003 0303 	and.w	r3, r3, #3
 800052a:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	4a1b      	ldr	r2, [pc, #108]	; (80005a0 <GPIO_Init+0x18c>)
 8000532:	4293      	cmp	r3, r2
 8000534:	d044      	beq.n	80005c0 <GPIO_Init+0x1ac>
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	4a1a      	ldr	r2, [pc, #104]	; (80005a4 <GPIO_Init+0x190>)
 800053c:	4293      	cmp	r3, r2
 800053e:	d02b      	beq.n	8000598 <GPIO_Init+0x184>
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	4a18      	ldr	r2, [pc, #96]	; (80005a8 <GPIO_Init+0x194>)
 8000546:	4293      	cmp	r3, r2
 8000548:	d024      	beq.n	8000594 <GPIO_Init+0x180>
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	4a17      	ldr	r2, [pc, #92]	; (80005ac <GPIO_Init+0x198>)
 8000550:	4293      	cmp	r3, r2
 8000552:	d01d      	beq.n	8000590 <GPIO_Init+0x17c>
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	4a15      	ldr	r2, [pc, #84]	; (80005b0 <GPIO_Init+0x19c>)
 800055a:	4293      	cmp	r3, r2
 800055c:	d016      	beq.n	800058c <GPIO_Init+0x178>
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	4a14      	ldr	r2, [pc, #80]	; (80005b4 <GPIO_Init+0x1a0>)
 8000564:	4293      	cmp	r3, r2
 8000566:	d00f      	beq.n	8000588 <GPIO_Init+0x174>
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	4a12      	ldr	r2, [pc, #72]	; (80005b8 <GPIO_Init+0x1a4>)
 800056e:	4293      	cmp	r3, r2
 8000570:	d008      	beq.n	8000584 <GPIO_Init+0x170>
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	681b      	ldr	r3, [r3, #0]
 8000576:	4a11      	ldr	r2, [pc, #68]	; (80005bc <GPIO_Init+0x1a8>)
 8000578:	4293      	cmp	r3, r2
 800057a:	d101      	bne.n	8000580 <GPIO_Init+0x16c>
 800057c:	2307      	movs	r3, #7
 800057e:	e020      	b.n	80005c2 <GPIO_Init+0x1ae>
 8000580:	2300      	movs	r3, #0
 8000582:	e01e      	b.n	80005c2 <GPIO_Init+0x1ae>
 8000584:	2306      	movs	r3, #6
 8000586:	e01c      	b.n	80005c2 <GPIO_Init+0x1ae>
 8000588:	2305      	movs	r3, #5
 800058a:	e01a      	b.n	80005c2 <GPIO_Init+0x1ae>
 800058c:	2304      	movs	r3, #4
 800058e:	e018      	b.n	80005c2 <GPIO_Init+0x1ae>
 8000590:	2303      	movs	r3, #3
 8000592:	e016      	b.n	80005c2 <GPIO_Init+0x1ae>
 8000594:	2302      	movs	r3, #2
 8000596:	e014      	b.n	80005c2 <GPIO_Init+0x1ae>
 8000598:	2301      	movs	r3, #1
 800059a:	e012      	b.n	80005c2 <GPIO_Init+0x1ae>
 800059c:	40013c00 	.word	0x40013c00
 80005a0:	40020000 	.word	0x40020000
 80005a4:	40020400 	.word	0x40020400
 80005a8:	40020800 	.word	0x40020800
 80005ac:	40020c00 	.word	0x40020c00
 80005b0:	40021000 	.word	0x40021000
 80005b4:	40021400 	.word	0x40021400
 80005b8:	40021800 	.word	0x40021800
 80005bc:	40021c00 	.word	0x40021c00
 80005c0:	2300      	movs	r3, #0
 80005c2:	747b      	strb	r3, [r7, #17]
		RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 80005c4:	4b5f      	ldr	r3, [pc, #380]	; (8000744 <GPIO_Init+0x330>)
 80005c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80005c8:	4a5e      	ldr	r2, [pc, #376]	; (8000744 <GPIO_Init+0x330>)
 80005ca:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005ce:	6453      	str	r3, [r2, #68]	; 0x44

		SYSCFG->EXTICR[temp1] |= portcode << (temp2 * 4);
 80005d0:	4a5d      	ldr	r2, [pc, #372]	; (8000748 <GPIO_Init+0x334>)
 80005d2:	7cfb      	ldrb	r3, [r7, #19]
 80005d4:	3302      	adds	r3, #2
 80005d6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80005da:	7c79      	ldrb	r1, [r7, #17]
 80005dc:	7cbb      	ldrb	r3, [r7, #18]
 80005de:	009b      	lsls	r3, r3, #2
 80005e0:	fa01 f303 	lsl.w	r3, r1, r3
 80005e4:	4618      	mov	r0, r3
 80005e6:	4958      	ldr	r1, [pc, #352]	; (8000748 <GPIO_Init+0x334>)
 80005e8:	7cfb      	ldrb	r3, [r7, #19]
 80005ea:	4302      	orrs	r2, r0
 80005ec:	3302      	adds	r3, #2
 80005ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//Enable EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005f2:	4b56      	ldr	r3, [pc, #344]	; (800074c <GPIO_Init+0x338>)
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	687a      	ldr	r2, [r7, #4]
 80005f8:	7912      	ldrb	r2, [r2, #4]
 80005fa:	4611      	mov	r1, r2
 80005fc:	2201      	movs	r2, #1
 80005fe:	408a      	lsls	r2, r1
 8000600:	4611      	mov	r1, r2
 8000602:	4a52      	ldr	r2, [pc, #328]	; (800074c <GPIO_Init+0x338>)
 8000604:	430b      	orrs	r3, r1
 8000606:	6013      	str	r3, [r2, #0]
	}

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_OUT)
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	795b      	ldrb	r3, [r3, #5]
 800060c:	2b01      	cmp	r3, #1
 800060e:	d13d      	bne.n	800068c <GPIO_Init+0x278>
	{
		//Configure the speed
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	799b      	ldrb	r3, [r3, #6]
 8000614:	461a      	mov	r2, r3
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	791b      	ldrb	r3, [r3, #4]
 800061a:	005b      	lsls	r3, r3, #1
 800061c:	fa02 f303 	lsl.w	r3, r2, r3
 8000620:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	689a      	ldr	r2, [r3, #8]
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	791b      	ldrb	r3, [r3, #4]
 800062c:	005b      	lsls	r3, r3, #1
 800062e:	2103      	movs	r1, #3
 8000630:	fa01 f303 	lsl.w	r3, r1, r3
 8000634:	43db      	mvns	r3, r3
 8000636:	4619      	mov	r1, r3
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	400a      	ands	r2, r1
 800063e:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	6899      	ldr	r1, [r3, #8]
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	697a      	ldr	r2, [r7, #20]
 800064c:	430a      	orrs	r2, r1
 800064e:	609a      	str	r2, [r3, #8]

		//Configure OPtype
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	7a1b      	ldrb	r3, [r3, #8]
 8000654:	461a      	mov	r2, r3
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	791b      	ldrb	r3, [r3, #4]
 800065a:	fa02 f303 	lsl.w	r3, r2, r3
 800065e:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	681b      	ldr	r3, [r3, #0]
 8000664:	685a      	ldr	r2, [r3, #4]
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	791b      	ldrb	r3, [r3, #4]
 800066a:	4619      	mov	r1, r3
 800066c:	2301      	movs	r3, #1
 800066e:	408b      	lsls	r3, r1
 8000670:	43db      	mvns	r3, r3
 8000672:	4619      	mov	r1, r3
 8000674:	687b      	ldr	r3, [r7, #4]
 8000676:	681b      	ldr	r3, [r3, #0]
 8000678:	400a      	ands	r2, r1
 800067a:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= temp;
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	681b      	ldr	r3, [r3, #0]
 8000680:	6859      	ldr	r1, [r3, #4]
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	697a      	ldr	r2, [r7, #20]
 8000688:	430a      	orrs	r2, r1
 800068a:	605a      	str	r2, [r3, #4]
	}

	//Configure the PU/PD settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	79db      	ldrb	r3, [r3, #7]
 8000690:	461a      	mov	r2, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	791b      	ldrb	r3, [r3, #4]
 8000696:	005b      	lsls	r3, r3, #1
 8000698:	fa02 f303 	lsl.w	r3, r2, r3
 800069c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	681b      	ldr	r3, [r3, #0]
 80006a2:	68da      	ldr	r2, [r3, #12]
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	791b      	ldrb	r3, [r3, #4]
 80006a8:	005b      	lsls	r3, r3, #1
 80006aa:	2103      	movs	r1, #3
 80006ac:	fa01 f303 	lsl.w	r3, r1, r3
 80006b0:	43db      	mvns	r3, r3
 80006b2:	4619      	mov	r1, r3
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	400a      	ands	r2, r1
 80006ba:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	68d9      	ldr	r1, [r3, #12]
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	697a      	ldr	r2, [r7, #20]
 80006c8:	430a      	orrs	r2, r1
 80006ca:	60da      	str	r2, [r3, #12]

	//Configure AF function if required
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	795b      	ldrb	r3, [r3, #5]
 80006d0:	2b02      	cmp	r3, #2
 80006d2:	d133      	bne.n	800073c <GPIO_Init+0x328>
	{
		uint8_t temp1,temp2 = 0;
 80006d4:	2300      	movs	r3, #0
 80006d6:	743b      	strb	r3, [r7, #16]

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	791b      	ldrb	r3, [r3, #4]
 80006dc:	08db      	lsrs	r3, r3, #3
 80006de:	73fb      	strb	r3, [r7, #15]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	791b      	ldrb	r3, [r3, #4]
 80006e4:	f003 0307 	and.w	r3, r3, #7
 80006e8:	743b      	strb	r3, [r7, #16]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xf << (4 * temp2));
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	7bfa      	ldrb	r2, [r7, #15]
 80006f0:	3208      	adds	r2, #8
 80006f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006f6:	7c3b      	ldrb	r3, [r7, #16]
 80006f8:	009b      	lsls	r3, r3, #2
 80006fa:	220f      	movs	r2, #15
 80006fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000700:	43db      	mvns	r3, r3
 8000702:	4618      	mov	r0, r3
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	7bfa      	ldrb	r2, [r7, #15]
 800070a:	4001      	ands	r1, r0
 800070c:	3208      	adds	r2, #8
 800070e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2);
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	7bfa      	ldrb	r2, [r7, #15]
 8000718:	3208      	adds	r2, #8
 800071a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	7a5b      	ldrb	r3, [r3, #9]
 8000722:	461a      	mov	r2, r3
 8000724:	7c3b      	ldrb	r3, [r7, #16]
 8000726:	009b      	lsls	r3, r3, #2
 8000728:	fa02 f303 	lsl.w	r3, r2, r3
 800072c:	4618      	mov	r0, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	681b      	ldr	r3, [r3, #0]
 8000732:	7bfa      	ldrb	r2, [r7, #15]
 8000734:	4301      	orrs	r1, r0
 8000736:	3208      	adds	r2, #8
 8000738:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800073c:	bf00      	nop
 800073e:	3718      	adds	r7, #24
 8000740:	46bd      	mov	sp, r7
 8000742:	bd80      	pop	{r7, pc}
 8000744:	40023800 	.word	0x40023800
 8000748:	40013800 	.word	0x40013800
 800074c:	40013c00 	.word	0x40013c00

08000750 <SPI_PeriClockControl>:

/*
 * Peripheral Clock setup
 */
void SPI_PeriClockControl(SPI_TypeDef *pSPIx, uint8_t En)
{
 8000750:	b480      	push	{r7}
 8000752:	b083      	sub	sp, #12
 8000754:	af00      	add	r7, sp, #0
 8000756:	6078      	str	r0, [r7, #4]
 8000758:	460b      	mov	r3, r1
 800075a:	70fb      	strb	r3, [r7, #3]
	if(En)
 800075c:	78fb      	ldrb	r3, [r7, #3]
 800075e:	2b00      	cmp	r3, #0
 8000760:	d02b      	beq.n	80007ba <SPI_PeriClockControl+0x6a>
	{
		if(pSPIx == SPI1) RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	4a39      	ldr	r2, [pc, #228]	; (800084c <SPI_PeriClockControl+0xfc>)
 8000766:	4293      	cmp	r3, r2
 8000768:	d106      	bne.n	8000778 <SPI_PeriClockControl+0x28>
 800076a:	4b39      	ldr	r3, [pc, #228]	; (8000850 <SPI_PeriClockControl+0x100>)
 800076c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800076e:	4a38      	ldr	r2, [pc, #224]	; (8000850 <SPI_PeriClockControl+0x100>)
 8000770:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000774:	6453      	str	r3, [r2, #68]	; 0x44
		{
			RCC->APB2RSTR |= RCC_APB2RSTR_SPI4RST;
			RCC->APB2RSTR &= ~RCC_APB2RSTR_SPI4RST;
		}
	}
}
 8000776:	e063      	b.n	8000840 <SPI_PeriClockControl+0xf0>
		else if(pSPIx == SPI2) RCC->APB1ENR |= RCC_APB1ENR_SPI2EN;
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	4a36      	ldr	r2, [pc, #216]	; (8000854 <SPI_PeriClockControl+0x104>)
 800077c:	4293      	cmp	r3, r2
 800077e:	d106      	bne.n	800078e <SPI_PeriClockControl+0x3e>
 8000780:	4b33      	ldr	r3, [pc, #204]	; (8000850 <SPI_PeriClockControl+0x100>)
 8000782:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000784:	4a32      	ldr	r2, [pc, #200]	; (8000850 <SPI_PeriClockControl+0x100>)
 8000786:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800078a:	6413      	str	r3, [r2, #64]	; 0x40
}
 800078c:	e058      	b.n	8000840 <SPI_PeriClockControl+0xf0>
		else if(pSPIx == SPI3) RCC->APB1ENR |= RCC_APB1ENR_SPI3EN;
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	4a31      	ldr	r2, [pc, #196]	; (8000858 <SPI_PeriClockControl+0x108>)
 8000792:	4293      	cmp	r3, r2
 8000794:	d106      	bne.n	80007a4 <SPI_PeriClockControl+0x54>
 8000796:	4b2e      	ldr	r3, [pc, #184]	; (8000850 <SPI_PeriClockControl+0x100>)
 8000798:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800079a:	4a2d      	ldr	r2, [pc, #180]	; (8000850 <SPI_PeriClockControl+0x100>)
 800079c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80007a0:	6413      	str	r3, [r2, #64]	; 0x40
}
 80007a2:	e04d      	b.n	8000840 <SPI_PeriClockControl+0xf0>
		else if(pSPIx == SPI4) RCC->APB2ENR |= RCC_APB2ENR_SPI4EN;
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	4a2d      	ldr	r2, [pc, #180]	; (800085c <SPI_PeriClockControl+0x10c>)
 80007a8:	4293      	cmp	r3, r2
 80007aa:	d149      	bne.n	8000840 <SPI_PeriClockControl+0xf0>
 80007ac:	4b28      	ldr	r3, [pc, #160]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007b0:	4a27      	ldr	r2, [pc, #156]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007b2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80007b6:	6453      	str	r3, [r2, #68]	; 0x44
}
 80007b8:	e042      	b.n	8000840 <SPI_PeriClockControl+0xf0>
		if(pSPIx == SPI1)
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	4a23      	ldr	r2, [pc, #140]	; (800084c <SPI_PeriClockControl+0xfc>)
 80007be:	4293      	cmp	r3, r2
 80007c0:	d10c      	bne.n	80007dc <SPI_PeriClockControl+0x8c>
			RCC->APB2RSTR |= RCC_APB2RSTR_SPI1RST;
 80007c2:	4b23      	ldr	r3, [pc, #140]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80007c6:	4a22      	ldr	r2, [pc, #136]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007c8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80007cc:	6253      	str	r3, [r2, #36]	; 0x24
			RCC->APB2RSTR &= ~RCC_APB2RSTR_SPI1RST;
 80007ce:	4b20      	ldr	r3, [pc, #128]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80007d2:	4a1f      	ldr	r2, [pc, #124]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007d4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80007d8:	6253      	str	r3, [r2, #36]	; 0x24
}
 80007da:	e031      	b.n	8000840 <SPI_PeriClockControl+0xf0>
		else if(pSPIx == SPI2)
 80007dc:	687b      	ldr	r3, [r7, #4]
 80007de:	4a1d      	ldr	r2, [pc, #116]	; (8000854 <SPI_PeriClockControl+0x104>)
 80007e0:	4293      	cmp	r3, r2
 80007e2:	d10c      	bne.n	80007fe <SPI_PeriClockControl+0xae>
			RCC->APB1RSTR |= RCC_APB1RSTR_SPI2RST;
 80007e4:	4b1a      	ldr	r3, [pc, #104]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007e6:	6a1b      	ldr	r3, [r3, #32]
 80007e8:	4a19      	ldr	r2, [pc, #100]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007ea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80007ee:	6213      	str	r3, [r2, #32]
			RCC->APB1RSTR &= ~RCC_APB1RSTR_SPI2RST;
 80007f0:	4b17      	ldr	r3, [pc, #92]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007f2:	6a1b      	ldr	r3, [r3, #32]
 80007f4:	4a16      	ldr	r2, [pc, #88]	; (8000850 <SPI_PeriClockControl+0x100>)
 80007f6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80007fa:	6213      	str	r3, [r2, #32]
}
 80007fc:	e020      	b.n	8000840 <SPI_PeriClockControl+0xf0>
		else if(pSPIx == SPI3)
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	4a15      	ldr	r2, [pc, #84]	; (8000858 <SPI_PeriClockControl+0x108>)
 8000802:	4293      	cmp	r3, r2
 8000804:	d10c      	bne.n	8000820 <SPI_PeriClockControl+0xd0>
			RCC->APB1RSTR |= RCC_APB1RSTR_SPI3RST;
 8000806:	4b12      	ldr	r3, [pc, #72]	; (8000850 <SPI_PeriClockControl+0x100>)
 8000808:	6a1b      	ldr	r3, [r3, #32]
 800080a:	4a11      	ldr	r2, [pc, #68]	; (8000850 <SPI_PeriClockControl+0x100>)
 800080c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000810:	6213      	str	r3, [r2, #32]
			RCC->APB1RSTR &= ~RCC_APB1RSTR_SPI3RST;
 8000812:	4b0f      	ldr	r3, [pc, #60]	; (8000850 <SPI_PeriClockControl+0x100>)
 8000814:	6a1b      	ldr	r3, [r3, #32]
 8000816:	4a0e      	ldr	r2, [pc, #56]	; (8000850 <SPI_PeriClockControl+0x100>)
 8000818:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800081c:	6213      	str	r3, [r2, #32]
}
 800081e:	e00f      	b.n	8000840 <SPI_PeriClockControl+0xf0>
		else if(pSPIx == SPI4)
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	4a0e      	ldr	r2, [pc, #56]	; (800085c <SPI_PeriClockControl+0x10c>)
 8000824:	4293      	cmp	r3, r2
 8000826:	d10b      	bne.n	8000840 <SPI_PeriClockControl+0xf0>
			RCC->APB2RSTR |= RCC_APB2RSTR_SPI4RST;
 8000828:	4b09      	ldr	r3, [pc, #36]	; (8000850 <SPI_PeriClockControl+0x100>)
 800082a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800082c:	4a08      	ldr	r2, [pc, #32]	; (8000850 <SPI_PeriClockControl+0x100>)
 800082e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000832:	6253      	str	r3, [r2, #36]	; 0x24
			RCC->APB2RSTR &= ~RCC_APB2RSTR_SPI4RST;
 8000834:	4b06      	ldr	r3, [pc, #24]	; (8000850 <SPI_PeriClockControl+0x100>)
 8000836:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000838:	4a05      	ldr	r2, [pc, #20]	; (8000850 <SPI_PeriClockControl+0x100>)
 800083a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800083e:	6253      	str	r3, [r2, #36]	; 0x24
}
 8000840:	bf00      	nop
 8000842:	370c      	adds	r7, #12
 8000844:	46bd      	mov	sp, r7
 8000846:	bc80      	pop	{r7}
 8000848:	4770      	bx	lr
 800084a:	bf00      	nop
 800084c:	40013000 	.word	0x40013000
 8000850:	40023800 	.word	0x40023800
 8000854:	40003800 	.word	0x40003800
 8000858:	40003c00 	.word	0x40003c00
 800085c:	40013400 	.word	0x40013400

08000860 <SPI_Init>:

/*
 * Init and De-init
 */
void SPI_Init(SPI_Handle_t *pSPIHandle)
{
 8000860:	b580      	push	{r7, lr}
 8000862:	b084      	sub	sp, #16
 8000864:	af00      	add	r7, sp, #0
 8000866:	6078      	str	r0, [r7, #4]
	//Configure SPI_CR1 reg

	uint32_t tempreg = 0;
 8000868:	2300      	movs	r3, #0
 800086a:	60fb      	str	r3, [r7, #12]

	//Enable preipheral clock
	SPI_PeriClockControl(pSPIHandle->pSPIx, 1);
 800086c:	687b      	ldr	r3, [r7, #4]
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	2101      	movs	r1, #1
 8000872:	4618      	mov	r0, r3
 8000874:	f7ff ff6c 	bl	8000750 <SPI_PeriClockControl>

	//Config device mode
	tempreg |= pSPIHandle->SPIConfig.SPI_DeviceMode << 2;
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	791b      	ldrb	r3, [r3, #4]
 800087c:	009b      	lsls	r3, r3, #2
 800087e:	461a      	mov	r2, r3
 8000880:	68fb      	ldr	r3, [r7, #12]
 8000882:	4313      	orrs	r3, r2
 8000884:	60fb      	str	r3, [r7, #12]

	//Config bus config
	if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_FD)
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	795b      	ldrb	r3, [r3, #5]
 800088a:	2b01      	cmp	r3, #1
 800088c:	d104      	bne.n	8000898 <SPI_Init+0x38>
	{
		//clear BIDIMODE
		tempreg &= ~(1<<15);
 800088e:	68fb      	ldr	r3, [r7, #12]
 8000890:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000894:	60fb      	str	r3, [r7, #12]
 8000896:	e014      	b.n	80008c2 <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_HD)
 8000898:	687b      	ldr	r3, [r7, #4]
 800089a:	795b      	ldrb	r3, [r3, #5]
 800089c:	2b02      	cmp	r3, #2
 800089e:	d104      	bne.n	80008aa <SPI_Init+0x4a>
	{
		//set BIDIMODE
		tempreg |= (1<<15);
 80008a0:	68fb      	ldr	r3, [r7, #12]
 80008a2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80008a6:	60fb      	str	r3, [r7, #12]
 80008a8:	e00b      	b.n	80008c2 <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_SIMPLEX_RXONLY)
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	795b      	ldrb	r3, [r3, #5]
 80008ae:	2b03      	cmp	r3, #3
 80008b0:	d107      	bne.n	80008c2 <SPI_Init+0x62>
	{
		//clear BIDIMODE
		tempreg &= ~(1<<15);
 80008b2:	68fb      	ldr	r3, [r7, #12]
 80008b4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80008b8:	60fb      	str	r3, [r7, #12]
		//set RXONLY
		tempreg |= (1<<10);
 80008ba:	68fb      	ldr	r3, [r7, #12]
 80008bc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80008c0:	60fb      	str	r3, [r7, #12]
	}
	// 3. Configure the spi serial clock speed (baud rate)
	tempreg |= pSPIHandle->SPIConfig.SPI_SclkSpeed << 3;
 80008c2:	687b      	ldr	r3, [r7, #4]
 80008c4:	799b      	ldrb	r3, [r3, #6]
 80008c6:	00db      	lsls	r3, r3, #3
 80008c8:	461a      	mov	r2, r3
 80008ca:	68fb      	ldr	r3, [r7, #12]
 80008cc:	4313      	orrs	r3, r2
 80008ce:	60fb      	str	r3, [r7, #12]

	//4.  Configure the DFF
	tempreg |= pSPIHandle->SPIConfig.SPI_DFF << 11;
 80008d0:	687b      	ldr	r3, [r7, #4]
 80008d2:	79db      	ldrb	r3, [r3, #7]
 80008d4:	02db      	lsls	r3, r3, #11
 80008d6:	461a      	mov	r2, r3
 80008d8:	68fb      	ldr	r3, [r7, #12]
 80008da:	4313      	orrs	r3, r2
 80008dc:	60fb      	str	r3, [r7, #12]

	//5. configure the CPOL
	tempreg |= pSPIHandle->SPIConfig.SPI_CPOL << 1;
 80008de:	687b      	ldr	r3, [r7, #4]
 80008e0:	7a1b      	ldrb	r3, [r3, #8]
 80008e2:	005b      	lsls	r3, r3, #1
 80008e4:	461a      	mov	r2, r3
 80008e6:	68fb      	ldr	r3, [r7, #12]
 80008e8:	4313      	orrs	r3, r2
 80008ea:	60fb      	str	r3, [r7, #12]

	//6 . configure the CPHA
	tempreg |= pSPIHandle->SPIConfig.SPI_CPHA << 0;
 80008ec:	687b      	ldr	r3, [r7, #4]
 80008ee:	7a5b      	ldrb	r3, [r3, #9]
 80008f0:	461a      	mov	r2, r3
 80008f2:	68fb      	ldr	r3, [r7, #12]
 80008f4:	4313      	orrs	r3, r2
 80008f6:	60fb      	str	r3, [r7, #12]

	tempreg |= pSPIHandle->SPIConfig.SPI_SSM << 9;
 80008f8:	687b      	ldr	r3, [r7, #4]
 80008fa:	7a9b      	ldrb	r3, [r3, #10]
 80008fc:	025b      	lsls	r3, r3, #9
 80008fe:	461a      	mov	r2, r3
 8000900:	68fb      	ldr	r3, [r7, #12]
 8000902:	4313      	orrs	r3, r2
 8000904:	60fb      	str	r3, [r7, #12]

	pSPIHandle->pSPIx->CR1 = tempreg;
 8000906:	687b      	ldr	r3, [r7, #4]
 8000908:	681b      	ldr	r3, [r3, #0]
 800090a:	68fa      	ldr	r2, [r7, #12]
 800090c:	601a      	str	r2, [r3, #0]
}
 800090e:	bf00      	nop
 8000910:	3710      	adds	r7, #16
 8000912:	46bd      	mov	sp, r7
 8000914:	bd80      	pop	{r7, pc}

08000916 <SPI_Send>:
/*
 * Data read and write
 */
//This is blocking call due to whiles
void SPI_Send(SPI_TypeDef *pSPIx, uint8_t *pTxBuffer, uint32_t len)
{
 8000916:	b480      	push	{r7}
 8000918:	b085      	sub	sp, #20
 800091a:	af00      	add	r7, sp, #0
 800091c:	60f8      	str	r0, [r7, #12]
 800091e:	60b9      	str	r1, [r7, #8]
 8000920:	607a      	str	r2, [r7, #4]
	while(len > 0)
 8000922:	e026      	b.n	8000972 <SPI_Send+0x5c>
	{
		//Wait until TXE is set
		while(!(pSPIx->SR & (1 << 1)));
 8000924:	bf00      	nop
 8000926:	68fb      	ldr	r3, [r7, #12]
 8000928:	689b      	ldr	r3, [r3, #8]
 800092a:	f003 0302 	and.w	r3, r3, #2
 800092e:	2b00      	cmp	r3, #0
 8000930:	d0f9      	beq.n	8000926 <SPI_Send+0x10>

		//Check DFF
		if((pSPIx->CR1 & (1 << 11)))
 8000932:	68fb      	ldr	r3, [r7, #12]
 8000934:	681b      	ldr	r3, [r3, #0]
 8000936:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800093a:	2b00      	cmp	r3, #0
 800093c:	d00e      	beq.n	800095c <SPI_Send+0x46>
		{
			//16-bit DFF
			//load data to DR reg
			pSPIx->DR = *((uint16_t*)pTxBuffer);
 800093e:	68bb      	ldr	r3, [r7, #8]
 8000940:	881b      	ldrh	r3, [r3, #0]
 8000942:	461a      	mov	r2, r3
 8000944:	68fb      	ldr	r3, [r7, #12]
 8000946:	60da      	str	r2, [r3, #12]
			len--;
 8000948:	687b      	ldr	r3, [r7, #4]
 800094a:	3b01      	subs	r3, #1
 800094c:	607b      	str	r3, [r7, #4]
			len--;
 800094e:	687b      	ldr	r3, [r7, #4]
 8000950:	3b01      	subs	r3, #1
 8000952:	607b      	str	r3, [r7, #4]
			(uint16_t*)pTxBuffer++;
 8000954:	68bb      	ldr	r3, [r7, #8]
 8000956:	3301      	adds	r3, #1
 8000958:	60bb      	str	r3, [r7, #8]
 800095a:	e00a      	b.n	8000972 <SPI_Send+0x5c>
		}
		else
		{
			//8-bit DFF
			pSPIx->DR = *pTxBuffer;
 800095c:	68bb      	ldr	r3, [r7, #8]
 800095e:	781b      	ldrb	r3, [r3, #0]
 8000960:	461a      	mov	r2, r3
 8000962:	68fb      	ldr	r3, [r7, #12]
 8000964:	60da      	str	r2, [r3, #12]
			len--;
 8000966:	687b      	ldr	r3, [r7, #4]
 8000968:	3b01      	subs	r3, #1
 800096a:	607b      	str	r3, [r7, #4]
			pTxBuffer++;
 800096c:	68bb      	ldr	r3, [r7, #8]
 800096e:	3301      	adds	r3, #1
 8000970:	60bb      	str	r3, [r7, #8]
	while(len > 0)
 8000972:	687b      	ldr	r3, [r7, #4]
 8000974:	2b00      	cmp	r3, #0
 8000976:	d1d5      	bne.n	8000924 <SPI_Send+0xe>
		}
	}
}
 8000978:	bf00      	nop
 800097a:	bf00      	nop
 800097c:	3714      	adds	r7, #20
 800097e:	46bd      	mov	sp, r7
 8000980:	bc80      	pop	{r7}
 8000982:	4770      	bx	lr

08000984 <SPI_PeripheralControl>:
{

}

void SPI_PeripheralControl(SPI_TypeDef *pSPIx, uint8_t En)
{
 8000984:	b480      	push	{r7}
 8000986:	b083      	sub	sp, #12
 8000988:	af00      	add	r7, sp, #0
 800098a:	6078      	str	r0, [r7, #4]
 800098c:	460b      	mov	r3, r1
 800098e:	70fb      	strb	r3, [r7, #3]
	if(En) pSPIx->CR1 |= (1 << 6);
 8000990:	78fb      	ldrb	r3, [r7, #3]
 8000992:	2b00      	cmp	r3, #0
 8000994:	d006      	beq.n	80009a4 <SPI_PeripheralControl+0x20>
 8000996:	687b      	ldr	r3, [r7, #4]
 8000998:	681b      	ldr	r3, [r3, #0]
 800099a:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800099e:	687b      	ldr	r3, [r7, #4]
 80009a0:	601a      	str	r2, [r3, #0]
	else pSPIx->CR1 &= ~(1 << 6);
}
 80009a2:	e005      	b.n	80009b0 <SPI_PeripheralControl+0x2c>
	else pSPIx->CR1 &= ~(1 << 6);
 80009a4:	687b      	ldr	r3, [r7, #4]
 80009a6:	681b      	ldr	r3, [r3, #0]
 80009a8:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 80009ac:	687b      	ldr	r3, [r7, #4]
 80009ae:	601a      	str	r2, [r3, #0]
}
 80009b0:	bf00      	nop
 80009b2:	370c      	adds	r7, #12
 80009b4:	46bd      	mov	sp, r7
 80009b6:	bc80      	pop	{r7}
 80009b8:	4770      	bx	lr

080009ba <SPI_SSIConfig>:

void SPI_SSIConfig(SPI_TypeDef *pSPIx, uint8_t En)
{
 80009ba:	b480      	push	{r7}
 80009bc:	b083      	sub	sp, #12
 80009be:	af00      	add	r7, sp, #0
 80009c0:	6078      	str	r0, [r7, #4]
 80009c2:	460b      	mov	r3, r1
 80009c4:	70fb      	strb	r3, [r7, #3]
	if(En) pSPIx->CR1 |= (1 << 8);
 80009c6:	78fb      	ldrb	r3, [r7, #3]
 80009c8:	2b00      	cmp	r3, #0
 80009ca:	d006      	beq.n	80009da <SPI_SSIConfig+0x20>
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80009d4:	687b      	ldr	r3, [r7, #4]
 80009d6:	601a      	str	r2, [r3, #0]
	else pSPIx->CR1 &= ~(1 << 8);
}
 80009d8:	e005      	b.n	80009e6 <SPI_SSIConfig+0x2c>
	else pSPIx->CR1 &= ~(1 << 8);
 80009da:	687b      	ldr	r3, [r7, #4]
 80009dc:	681b      	ldr	r3, [r3, #0]
 80009de:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80009e2:	687b      	ldr	r3, [r7, #4]
 80009e4:	601a      	str	r2, [r3, #0]
}
 80009e6:	bf00      	nop
 80009e8:	370c      	adds	r7, #12
 80009ea:	46bd      	mov	sp, r7
 80009ec:	bc80      	pop	{r7}
 80009ee:	4770      	bx	lr

080009f0 <SPI_SSOEConfig>:

void SPI_SSOEConfig(SPI_TypeDef *pSPIx, uint8_t En)
{
 80009f0:	b480      	push	{r7}
 80009f2:	b083      	sub	sp, #12
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	6078      	str	r0, [r7, #4]
 80009f8:	460b      	mov	r3, r1
 80009fa:	70fb      	strb	r3, [r7, #3]
	if(En) pSPIx->CR2 |= (1 << 2);
 80009fc:	78fb      	ldrb	r3, [r7, #3]
 80009fe:	2b00      	cmp	r3, #0
 8000a00:	d006      	beq.n	8000a10 <SPI_SSOEConfig+0x20>
 8000a02:	687b      	ldr	r3, [r7, #4]
 8000a04:	685b      	ldr	r3, [r3, #4]
 8000a06:	f043 0204 	orr.w	r2, r3, #4
 8000a0a:	687b      	ldr	r3, [r7, #4]
 8000a0c:	605a      	str	r2, [r3, #4]
	else pSPIx->CR2 &= ~(1 << 2);
}
 8000a0e:	e005      	b.n	8000a1c <SPI_SSOEConfig+0x2c>
	else pSPIx->CR2 &= ~(1 << 2);
 8000a10:	687b      	ldr	r3, [r7, #4]
 8000a12:	685b      	ldr	r3, [r3, #4]
 8000a14:	f023 0204 	bic.w	r2, r3, #4
 8000a18:	687b      	ldr	r3, [r7, #4]
 8000a1a:	605a      	str	r2, [r3, #4]
}
 8000a1c:	bf00      	nop
 8000a1e:	370c      	adds	r7, #12
 8000a20:	46bd      	mov	sp, r7
 8000a22:	bc80      	pop	{r7}
 8000a24:	4770      	bx	lr
	...

08000a28 <SPI2_GPIOInits>:
 * PB15 --> SPI2_MOSI
 * AF --> 5
 */

void SPI2_GPIOInits(void)
{
 8000a28:	b580      	push	{r7, lr}
 8000a2a:	b084      	sub	sp, #16
 8000a2c:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOB;
 8000a2e:	4b0e      	ldr	r3, [pc, #56]	; (8000a68 <SPI2_GPIOInits+0x40>)
 8000a30:	607b      	str	r3, [r7, #4]
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8000a32:	2302      	movs	r3, #2
 8000a34:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
 8000a36:	2305      	movs	r3, #5
 8000a38:	737b      	strb	r3, [r7, #13]
	SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000a3a:	2300      	movs	r3, #0
 8000a3c:	733b      	strb	r3, [r7, #12]
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000a3e:	2300      	movs	r3, #0
 8000a40:	72fb      	strb	r3, [r7, #11]
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000a42:	2302      	movs	r3, #2
 8000a44:	72bb      	strb	r3, [r7, #10]
	//NSS
	/*SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
	GPIO_Init(&SPIPins);*/

	//SCLK
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000a46:	230d      	movs	r3, #13
 8000a48:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a4a:	1d3b      	adds	r3, r7, #4
 8000a4c:	4618      	mov	r0, r3
 8000a4e:	f7ff fce1 	bl	8000414 <GPIO_Init>
	//MISO
	/*SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
	GPIO_Init(&SPIPins);*/

	//MOSI
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000a52:	230f      	movs	r3, #15
 8000a54:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000a56:	1d3b      	adds	r3, r7, #4
 8000a58:	4618      	mov	r0, r3
 8000a5a:	f7ff fcdb 	bl	8000414 <GPIO_Init>
}
 8000a5e:	bf00      	nop
 8000a60:	3710      	adds	r7, #16
 8000a62:	46bd      	mov	sp, r7
 8000a64:	bd80      	pop	{r7, pc}
 8000a66:	bf00      	nop
 8000a68:	40020400 	.word	0x40020400

08000a6c <SPI2_Inits>:

void SPI2_Inits(void)
{
 8000a6c:	b580      	push	{r7, lr}
 8000a6e:	b084      	sub	sp, #16
 8000a70:	af00      	add	r7, sp, #0
	SPI_Handle_t SPI2Handle;

	SPI2Handle.pSPIx = SPI2;
 8000a72:	4b0c      	ldr	r3, [pc, #48]	; (8000aa4 <SPI2_Inits+0x38>)
 8000a74:	607b      	str	r3, [r7, #4]
	SPI2Handle.SPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 8000a76:	2301      	movs	r3, #1
 8000a78:	727b      	strb	r3, [r7, #9]
	SPI2Handle.SPIConfig.SPI_DeviceMode = SPI_DEVICE_MODE_MASTER;
 8000a7a:	2301      	movs	r3, #1
 8000a7c:	723b      	strb	r3, [r7, #8]
	SPI2Handle.SPIConfig.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV2; //generates sclk of 8MHz
 8000a7e:	2300      	movs	r3, #0
 8000a80:	72bb      	strb	r3, [r7, #10]
	SPI2Handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
 8000a82:	2300      	movs	r3, #0
 8000a84:	72fb      	strb	r3, [r7, #11]
	SPI2Handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
 8000a86:	2300      	movs	r3, #0
 8000a88:	733b      	strb	r3, [r7, #12]
	SPI2Handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
 8000a8a:	2300      	movs	r3, #0
 8000a8c:	737b      	strb	r3, [r7, #13]
	SPI2Handle.SPIConfig.SPI_SSM = SPI_SSM_EN;
 8000a8e:	2301      	movs	r3, #1
 8000a90:	73bb      	strb	r3, [r7, #14]


	SPI_Init(&SPI2Handle);
 8000a92:	1d3b      	adds	r3, r7, #4
 8000a94:	4618      	mov	r0, r3
 8000a96:	f7ff fee3 	bl	8000860 <SPI_Init>
}
 8000a9a:	bf00      	nop
 8000a9c:	3710      	adds	r7, #16
 8000a9e:	46bd      	mov	sp, r7
 8000aa0:	bd80      	pop	{r7, pc}
 8000aa2:	bf00      	nop
 8000aa4:	40003800 	.word	0x40003800

08000aa8 <main>:

int main(void)
{
 8000aa8:	b580      	push	{r7, lr}
 8000aaa:	b084      	sub	sp, #16
 8000aac:	af00      	add	r7, sp, #0
	char user_data[] = "Hello World";
 8000aae:	4a1a      	ldr	r2, [pc, #104]	; (8000b18 <main+0x70>)
 8000ab0:	463b      	mov	r3, r7
 8000ab2:	ca07      	ldmia	r2, {r0, r1, r2}
 8000ab4:	e883 0007 	stmia.w	r3, {r0, r1, r2}

	//Init gpio pins to spi
	SPI2_GPIOInits();
 8000ab8:	f7ff ffb6 	bl	8000a28 <SPI2_GPIOInits>

	//Init SPI2 periph params
	SPI2_Inits();
 8000abc:	f7ff ffd6 	bl	8000a6c <SPI2_Inits>

	//Set SSI to 1 since SSM is enabled
	SPI_SSIConfig(SPI2, 1);
 8000ac0:	2101      	movs	r1, #1
 8000ac2:	4816      	ldr	r0, [pc, #88]	; (8000b1c <main+0x74>)
 8000ac4:	f7ff ff79 	bl	80009ba <SPI_SSIConfig>

	SPI_SSOEConfig(SPI2, 1);
 8000ac8:	2101      	movs	r1, #1
 8000aca:	4814      	ldr	r0, [pc, #80]	; (8000b1c <main+0x74>)
 8000acc:	f7ff ff90 	bl	80009f0 <SPI_SSOEConfig>

	//Enable SPI2 peripheral
	SPI_PeripheralControl(SPI2, 1);
 8000ad0:	2101      	movs	r1, #1
 8000ad2:	4812      	ldr	r0, [pc, #72]	; (8000b1c <main+0x74>)
 8000ad4:	f7ff ff56 	bl	8000984 <SPI_PeripheralControl>

	//Send data
	SPI_Send(SPI2, (uint8_t*)user_data, strlen(user_data));
 8000ad8:	463b      	mov	r3, r7
 8000ada:	4618      	mov	r0, r3
 8000adc:	f7ff fb92 	bl	8000204 <strlen>
 8000ae0:	4602      	mov	r2, r0
 8000ae2:	463b      	mov	r3, r7
 8000ae4:	4619      	mov	r1, r3
 8000ae6:	480d      	ldr	r0, [pc, #52]	; (8000b1c <main+0x74>)
 8000ae8:	f7ff ff15 	bl	8000916 <SPI_Send>

	uint8_t temp;

	while(!(SPI2->SR & SR_TXE)){}//Wait until TXE is set
 8000aec:	bf00      	nop
 8000aee:	4b0b      	ldr	r3, [pc, #44]	; (8000b1c <main+0x74>)
 8000af0:	689b      	ldr	r3, [r3, #8]
 8000af2:	f003 0302 	and.w	r3, r3, #2
 8000af6:	2b00      	cmp	r3, #0
 8000af8:	d0f9      	beq.n	8000aee <main+0x46>
	while(SPI2->SR & SR_BSY){}//Wait for BUSY flag to reset
 8000afa:	bf00      	nop
 8000afc:	4b07      	ldr	r3, [pc, #28]	; (8000b1c <main+0x74>)
 8000afe:	689b      	ldr	r3, [r3, #8]
 8000b00:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000b04:	2b00      	cmp	r3, #0
 8000b06:	d1f9      	bne.n	8000afc <main+0x54>
	temp = SPI2->DR; //Weird way to clear OVR fLag
 8000b08:	4b04      	ldr	r3, [pc, #16]	; (8000b1c <main+0x74>)
 8000b0a:	68db      	ldr	r3, [r3, #12]
 8000b0c:	73fb      	strb	r3, [r7, #15]
	temp = SPI2->SR;
 8000b0e:	4b03      	ldr	r3, [pc, #12]	; (8000b1c <main+0x74>)
 8000b10:	689b      	ldr	r3, [r3, #8]
 8000b12:	73fb      	strb	r3, [r7, #15]

	//SPI_PeripheralControl(SPI2, 0);

	while(1);
 8000b14:	e7fe      	b.n	8000b14 <main+0x6c>
 8000b16:	bf00      	nop
 8000b18:	08000bd4 	.word	0x08000bd4
 8000b1c:	40003800 	.word	0x40003800

08000b20 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000b20:	480d      	ldr	r0, [pc, #52]	; (8000b58 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000b22:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000b24:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000b28:	480c      	ldr	r0, [pc, #48]	; (8000b5c <LoopForever+0x6>)
  ldr r1, =_edata
 8000b2a:	490d      	ldr	r1, [pc, #52]	; (8000b60 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000b2c:	4a0d      	ldr	r2, [pc, #52]	; (8000b64 <LoopForever+0xe>)
  movs r3, #0
 8000b2e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000b30:	e002      	b.n	8000b38 <LoopCopyDataInit>

08000b32 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000b32:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000b34:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000b36:	3304      	adds	r3, #4

08000b38 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000b38:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000b3a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000b3c:	d3f9      	bcc.n	8000b32 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000b3e:	4a0a      	ldr	r2, [pc, #40]	; (8000b68 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000b40:	4c0a      	ldr	r4, [pc, #40]	; (8000b6c <LoopForever+0x16>)
  movs r3, #0
 8000b42:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000b44:	e001      	b.n	8000b4a <LoopFillZerobss>

08000b46 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000b46:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000b48:	3204      	adds	r2, #4

08000b4a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000b4a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000b4c:	d3fb      	bcc.n	8000b46 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000b4e:	f000 f811 	bl	8000b74 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000b52:	f7ff ffa9 	bl	8000aa8 <main>

08000b56 <LoopForever>:

LoopForever:
  b LoopForever
 8000b56:	e7fe      	b.n	8000b56 <LoopForever>
  ldr   r0, =_estack
 8000b58:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000b5c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000b60:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000b64:	08000be8 	.word	0x08000be8
  ldr r2, =_sbss
 8000b68:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000b6c:	2000001c 	.word	0x2000001c

08000b70 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000b70:	e7fe      	b.n	8000b70 <ADC_IRQHandler>
	...

08000b74 <__libc_init_array>:
 8000b74:	b570      	push	{r4, r5, r6, lr}
 8000b76:	4d0d      	ldr	r5, [pc, #52]	; (8000bac <__libc_init_array+0x38>)
 8000b78:	4c0d      	ldr	r4, [pc, #52]	; (8000bb0 <__libc_init_array+0x3c>)
 8000b7a:	1b64      	subs	r4, r4, r5
 8000b7c:	10a4      	asrs	r4, r4, #2
 8000b7e:	2600      	movs	r6, #0
 8000b80:	42a6      	cmp	r6, r4
 8000b82:	d109      	bne.n	8000b98 <__libc_init_array+0x24>
 8000b84:	4d0b      	ldr	r5, [pc, #44]	; (8000bb4 <__libc_init_array+0x40>)
 8000b86:	4c0c      	ldr	r4, [pc, #48]	; (8000bb8 <__libc_init_array+0x44>)
 8000b88:	f000 f818 	bl	8000bbc <_init>
 8000b8c:	1b64      	subs	r4, r4, r5
 8000b8e:	10a4      	asrs	r4, r4, #2
 8000b90:	2600      	movs	r6, #0
 8000b92:	42a6      	cmp	r6, r4
 8000b94:	d105      	bne.n	8000ba2 <__libc_init_array+0x2e>
 8000b96:	bd70      	pop	{r4, r5, r6, pc}
 8000b98:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b9c:	4798      	blx	r3
 8000b9e:	3601      	adds	r6, #1
 8000ba0:	e7ee      	b.n	8000b80 <__libc_init_array+0xc>
 8000ba2:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ba6:	4798      	blx	r3
 8000ba8:	3601      	adds	r6, #1
 8000baa:	e7f2      	b.n	8000b92 <__libc_init_array+0x1e>
 8000bac:	08000be0 	.word	0x08000be0
 8000bb0:	08000be0 	.word	0x08000be0
 8000bb4:	08000be0 	.word	0x08000be0
 8000bb8:	08000be4 	.word	0x08000be4

08000bbc <_init>:
 8000bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bbe:	bf00      	nop
 8000bc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000bc2:	bc08      	pop	{r3}
 8000bc4:	469e      	mov	lr, r3
 8000bc6:	4770      	bx	lr

08000bc8 <_fini>:
 8000bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000bca:	bf00      	nop
 8000bcc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000bce:	bc08      	pop	{r3}
 8000bd0:	469e      	mov	lr, r3
 8000bd2:	4770      	bx	lr
